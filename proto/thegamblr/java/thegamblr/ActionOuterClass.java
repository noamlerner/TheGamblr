// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action.proto

package thegamblr;

public final class ActionOuterClass {
  private ActionOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code thegamblr.ActionType}
   */
  public enum ActionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FOLD = 0;</code>
     */
    FOLD(0),
    /**
     * <code>CALL = 1;</code>
     */
    CALL(1),
    /**
     * <code>RAISE = 2;</code>
     */
    RAISE(2),
    /**
     * <code>CHECK_FOLD = 3;</code>
     */
    CHECK_FOLD(3),
    /**
     * <code>SMALL_BLIND = 4;</code>
     */
    SMALL_BLIND(4),
    /**
     * <code>BIG_BLIND = 5;</code>
     */
    BIG_BLIND(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>FOLD = 0;</code>
     */
    public static final int FOLD_VALUE = 0;
    /**
     * <code>CALL = 1;</code>
     */
    public static final int CALL_VALUE = 1;
    /**
     * <code>RAISE = 2;</code>
     */
    public static final int RAISE_VALUE = 2;
    /**
     * <code>CHECK_FOLD = 3;</code>
     */
    public static final int CHECK_FOLD_VALUE = 3;
    /**
     * <code>SMALL_BLIND = 4;</code>
     */
    public static final int SMALL_BLIND_VALUE = 4;
    /**
     * <code>BIG_BLIND = 5;</code>
     */
    public static final int BIG_BLIND_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ActionType forNumber(int value) {
      switch (value) {
        case 0: return FOLD;
        case 1: return CALL;
        case 2: return RAISE;
        case 3: return CHECK_FOLD;
        case 4: return SMALL_BLIND;
        case 5: return BIG_BLIND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ActionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ActionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActionType>() {
            public ActionType findValueByNumber(int number) {
              return ActionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return thegamblr.ActionOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final ActionType[] VALUES = values();

    public static ActionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ActionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:thegamblr.ActionType)
  }

  public interface ActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thegamblr.Action)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * An enum representing which action a player took.
     * </pre>
     *
     * <code>.thegamblr.ActionType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * An enum representing which action a player took.
     * </pre>
     *
     * <code>.thegamblr.ActionType type = 1;</code>
     * @return The type.
     */
    thegamblr.ActionOuterClass.ActionType getType();

    /**
     * <pre>
     * PlayerState contains information about the player.
     * </pre>
     *
     * <code>.thegamblr.PlayerState player = 2;</code>
     * @return Whether the player field is set.
     */
    boolean hasPlayer();
    /**
     * <pre>
     * PlayerState contains information about the player.
     * </pre>
     *
     * <code>.thegamblr.PlayerState player = 2;</code>
     * @return The player.
     */
    thegamblr.PlayerStateOuterClass.PlayerState getPlayer();
    /**
     * <pre>
     * PlayerState contains information about the player.
     * </pre>
     *
     * <code>.thegamblr.PlayerState player = 2;</code>
     */
    thegamblr.PlayerStateOuterClass.PlayerStateOrBuilder getPlayerOrBuilder();

    /**
     * <pre>
     * Amount will be 0 unless the action is Call, SmallBlind, BigBlind or Raise in which case this will indicate how
     * much was put into the pot.
     * </pre>
     *
     * <code>uint64 amount = 3;</code>
     * @return The amount.
     */
    long getAmount();
  }
  /**
   * Protobuf type {@code thegamblr.Action}
   */
  public static final class Action extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thegamblr.Action)
      ActionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Action.newBuilder() to construct.
    private Action(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Action() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Action();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Action(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              thegamblr.PlayerStateOuterClass.PlayerState.Builder subBuilder = null;
              if (player_ != null) {
                subBuilder = player_.toBuilder();
              }
              player_ = input.readMessage(thegamblr.PlayerStateOuterClass.PlayerState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(player_);
                player_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              amount_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return thegamblr.ActionOuterClass.internal_static_thegamblr_Action_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return thegamblr.ActionOuterClass.internal_static_thegamblr_Action_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              thegamblr.ActionOuterClass.Action.class, thegamblr.ActionOuterClass.Action.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * An enum representing which action a player took.
     * </pre>
     *
     * <code>.thegamblr.ActionType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * An enum representing which action a player took.
     * </pre>
     *
     * <code>.thegamblr.ActionType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public thegamblr.ActionOuterClass.ActionType getType() {
      @SuppressWarnings("deprecation")
      thegamblr.ActionOuterClass.ActionType result = thegamblr.ActionOuterClass.ActionType.valueOf(type_);
      return result == null ? thegamblr.ActionOuterClass.ActionType.UNRECOGNIZED : result;
    }

    public static final int PLAYER_FIELD_NUMBER = 2;
    private thegamblr.PlayerStateOuterClass.PlayerState player_;
    /**
     * <pre>
     * PlayerState contains information about the player.
     * </pre>
     *
     * <code>.thegamblr.PlayerState player = 2;</code>
     * @return Whether the player field is set.
     */
    @java.lang.Override
    public boolean hasPlayer() {
      return player_ != null;
    }
    /**
     * <pre>
     * PlayerState contains information about the player.
     * </pre>
     *
     * <code>.thegamblr.PlayerState player = 2;</code>
     * @return The player.
     */
    @java.lang.Override
    public thegamblr.PlayerStateOuterClass.PlayerState getPlayer() {
      return player_ == null ? thegamblr.PlayerStateOuterClass.PlayerState.getDefaultInstance() : player_;
    }
    /**
     * <pre>
     * PlayerState contains information about the player.
     * </pre>
     *
     * <code>.thegamblr.PlayerState player = 2;</code>
     */
    @java.lang.Override
    public thegamblr.PlayerStateOuterClass.PlayerStateOrBuilder getPlayerOrBuilder() {
      return getPlayer();
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * Amount will be 0 unless the action is Call, SmallBlind, BigBlind or Raise in which case this will indicate how
     * much was put into the pot.
     * </pre>
     *
     * <code>uint64 amount = 3;</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != thegamblr.ActionOuterClass.ActionType.FOLD.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (player_ != null) {
        output.writeMessage(2, getPlayer());
      }
      if (amount_ != 0L) {
        output.writeUInt64(3, amount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != thegamblr.ActionOuterClass.ActionType.FOLD.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (player_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPlayer());
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, amount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof thegamblr.ActionOuterClass.Action)) {
        return super.equals(obj);
      }
      thegamblr.ActionOuterClass.Action other = (thegamblr.ActionOuterClass.Action) obj;

      if (type_ != other.type_) return false;
      if (hasPlayer() != other.hasPlayer()) return false;
      if (hasPlayer()) {
        if (!getPlayer()
            .equals(other.getPlayer())) return false;
      }
      if (getAmount()
          != other.getAmount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer().hashCode();
      }
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static thegamblr.ActionOuterClass.Action parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static thegamblr.ActionOuterClass.Action parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static thegamblr.ActionOuterClass.Action parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static thegamblr.ActionOuterClass.Action parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static thegamblr.ActionOuterClass.Action parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static thegamblr.ActionOuterClass.Action parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static thegamblr.ActionOuterClass.Action parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static thegamblr.ActionOuterClass.Action parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static thegamblr.ActionOuterClass.Action parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static thegamblr.ActionOuterClass.Action parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static thegamblr.ActionOuterClass.Action parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static thegamblr.ActionOuterClass.Action parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(thegamblr.ActionOuterClass.Action prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code thegamblr.Action}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thegamblr.Action)
        thegamblr.ActionOuterClass.ActionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return thegamblr.ActionOuterClass.internal_static_thegamblr_Action_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return thegamblr.ActionOuterClass.internal_static_thegamblr_Action_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                thegamblr.ActionOuterClass.Action.class, thegamblr.ActionOuterClass.Action.Builder.class);
      }

      // Construct using thegamblr.ActionOuterClass.Action.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (playerBuilder_ == null) {
          player_ = null;
        } else {
          player_ = null;
          playerBuilder_ = null;
        }
        amount_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return thegamblr.ActionOuterClass.internal_static_thegamblr_Action_descriptor;
      }

      @java.lang.Override
      public thegamblr.ActionOuterClass.Action getDefaultInstanceForType() {
        return thegamblr.ActionOuterClass.Action.getDefaultInstance();
      }

      @java.lang.Override
      public thegamblr.ActionOuterClass.Action build() {
        thegamblr.ActionOuterClass.Action result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public thegamblr.ActionOuterClass.Action buildPartial() {
        thegamblr.ActionOuterClass.Action result = new thegamblr.ActionOuterClass.Action(this);
        result.type_ = type_;
        if (playerBuilder_ == null) {
          result.player_ = player_;
        } else {
          result.player_ = playerBuilder_.build();
        }
        result.amount_ = amount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof thegamblr.ActionOuterClass.Action) {
          return mergeFrom((thegamblr.ActionOuterClass.Action)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(thegamblr.ActionOuterClass.Action other) {
        if (other == thegamblr.ActionOuterClass.Action.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasPlayer()) {
          mergePlayer(other.getPlayer());
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        thegamblr.ActionOuterClass.Action parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (thegamblr.ActionOuterClass.Action) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * An enum representing which action a player took.
       * </pre>
       *
       * <code>.thegamblr.ActionType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * An enum representing which action a player took.
       * </pre>
       *
       * <code>.thegamblr.ActionType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An enum representing which action a player took.
       * </pre>
       *
       * <code>.thegamblr.ActionType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public thegamblr.ActionOuterClass.ActionType getType() {
        @SuppressWarnings("deprecation")
        thegamblr.ActionOuterClass.ActionType result = thegamblr.ActionOuterClass.ActionType.valueOf(type_);
        return result == null ? thegamblr.ActionOuterClass.ActionType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * An enum representing which action a player took.
       * </pre>
       *
       * <code>.thegamblr.ActionType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(thegamblr.ActionOuterClass.ActionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An enum representing which action a player took.
       * </pre>
       *
       * <code>.thegamblr.ActionType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private thegamblr.PlayerStateOuterClass.PlayerState player_;
      private com.google.protobuf.SingleFieldBuilderV3<
          thegamblr.PlayerStateOuterClass.PlayerState, thegamblr.PlayerStateOuterClass.PlayerState.Builder, thegamblr.PlayerStateOuterClass.PlayerStateOrBuilder> playerBuilder_;
      /**
       * <pre>
       * PlayerState contains information about the player.
       * </pre>
       *
       * <code>.thegamblr.PlayerState player = 2;</code>
       * @return Whether the player field is set.
       */
      public boolean hasPlayer() {
        return playerBuilder_ != null || player_ != null;
      }
      /**
       * <pre>
       * PlayerState contains information about the player.
       * </pre>
       *
       * <code>.thegamblr.PlayerState player = 2;</code>
       * @return The player.
       */
      public thegamblr.PlayerStateOuterClass.PlayerState getPlayer() {
        if (playerBuilder_ == null) {
          return player_ == null ? thegamblr.PlayerStateOuterClass.PlayerState.getDefaultInstance() : player_;
        } else {
          return playerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * PlayerState contains information about the player.
       * </pre>
       *
       * <code>.thegamblr.PlayerState player = 2;</code>
       */
      public Builder setPlayer(thegamblr.PlayerStateOuterClass.PlayerState value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          player_ = value;
          onChanged();
        } else {
          playerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * PlayerState contains information about the player.
       * </pre>
       *
       * <code>.thegamblr.PlayerState player = 2;</code>
       */
      public Builder setPlayer(
          thegamblr.PlayerStateOuterClass.PlayerState.Builder builderForValue) {
        if (playerBuilder_ == null) {
          player_ = builderForValue.build();
          onChanged();
        } else {
          playerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * PlayerState contains information about the player.
       * </pre>
       *
       * <code>.thegamblr.PlayerState player = 2;</code>
       */
      public Builder mergePlayer(thegamblr.PlayerStateOuterClass.PlayerState value) {
        if (playerBuilder_ == null) {
          if (player_ != null) {
            player_ =
              thegamblr.PlayerStateOuterClass.PlayerState.newBuilder(player_).mergeFrom(value).buildPartial();
          } else {
            player_ = value;
          }
          onChanged();
        } else {
          playerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * PlayerState contains information about the player.
       * </pre>
       *
       * <code>.thegamblr.PlayerState player = 2;</code>
       */
      public Builder clearPlayer() {
        if (playerBuilder_ == null) {
          player_ = null;
          onChanged();
        } else {
          player_ = null;
          playerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * PlayerState contains information about the player.
       * </pre>
       *
       * <code>.thegamblr.PlayerState player = 2;</code>
       */
      public thegamblr.PlayerStateOuterClass.PlayerState.Builder getPlayerBuilder() {
        
        onChanged();
        return getPlayerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * PlayerState contains information about the player.
       * </pre>
       *
       * <code>.thegamblr.PlayerState player = 2;</code>
       */
      public thegamblr.PlayerStateOuterClass.PlayerStateOrBuilder getPlayerOrBuilder() {
        if (playerBuilder_ != null) {
          return playerBuilder_.getMessageOrBuilder();
        } else {
          return player_ == null ?
              thegamblr.PlayerStateOuterClass.PlayerState.getDefaultInstance() : player_;
        }
      }
      /**
       * <pre>
       * PlayerState contains information about the player.
       * </pre>
       *
       * <code>.thegamblr.PlayerState player = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          thegamblr.PlayerStateOuterClass.PlayerState, thegamblr.PlayerStateOuterClass.PlayerState.Builder, thegamblr.PlayerStateOuterClass.PlayerStateOrBuilder> 
          getPlayerFieldBuilder() {
        if (playerBuilder_ == null) {
          playerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              thegamblr.PlayerStateOuterClass.PlayerState, thegamblr.PlayerStateOuterClass.PlayerState.Builder, thegamblr.PlayerStateOuterClass.PlayerStateOrBuilder>(
                  getPlayer(),
                  getParentForChildren(),
                  isClean());
          player_ = null;
        }
        return playerBuilder_;
      }

      private long amount_ ;
      /**
       * <pre>
       * Amount will be 0 unless the action is Call, SmallBlind, BigBlind or Raise in which case this will indicate how
       * much was put into the pot.
       * </pre>
       *
       * <code>uint64 amount = 3;</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * Amount will be 0 unless the action is Call, SmallBlind, BigBlind or Raise in which case this will indicate how
       * much was put into the pot.
       * </pre>
       *
       * <code>uint64 amount = 3;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Amount will be 0 unless the action is Call, SmallBlind, BigBlind or Raise in which case this will indicate how
       * much was put into the pot.
       * </pre>
       *
       * <code>uint64 amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        
        amount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:thegamblr.Action)
    }

    // @@protoc_insertion_point(class_scope:thegamblr.Action)
    private static final thegamblr.ActionOuterClass.Action DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new thegamblr.ActionOuterClass.Action();
    }

    public static thegamblr.ActionOuterClass.Action getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Action>
        PARSER = new com.google.protobuf.AbstractParser<Action>() {
      @java.lang.Override
      public Action parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Action(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Action> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Action> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public thegamblr.ActionOuterClass.Action getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thegamblr_Action_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thegamblr_Action_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014action.proto\022\tthegamblr\032\022player_state." +
      "proto\"e\n\006Action\022#\n\004type\030\001 \001(\0162\025.thegambl" +
      "r.ActionType\022&\n\006player\030\002 \001(\0132\026.thegamblr" +
      ".PlayerState\022\016\n\006amount\030\003 \001(\004*[\n\nActionTy" +
      "pe\022\010\n\004FOLD\020\000\022\010\n\004CALL\020\001\022\t\n\005RAISE\020\002\022\016\n\nCHE" +
      "CK_FOLD\020\003\022\017\n\013SMALL_BLIND\020\004\022\r\n\tBIG_BLIND\020" +
      "\005B\021Z\017thegamblr/protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          thegamblr.PlayerStateOuterClass.getDescriptor(),
        });
    internal_static_thegamblr_Action_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_thegamblr_Action_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thegamblr_Action_descriptor,
        new java.lang.String[] { "Type", "Player", "Amount", });
    thegamblr.PlayerStateOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
